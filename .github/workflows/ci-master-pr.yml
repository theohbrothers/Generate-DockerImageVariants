name: ci-master-pr

on:
  push:
    branches:
    - master
    tags:
    - '**'
  pull_request:
    branches:
    - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Powershell version
      run: |
        pwsh -NoLogo -NonInteractive -NoProfile -Command '$PSVersionTable'
    - name: Test
      run: |
        pwsh -NoLogo -NonInteractive -NoProfile -Command './build/PSModulePublisher/src/Invoke-PSModulePublisher.ps1 -Repository PSGallery -DryRun'

  test-powershell-5-1-windows-2019:
    runs-on: windows-2019
    steps:
    - uses: actions/checkout@v2
    - name: Powershell version
      run: |
        powershell -NoLogo -NonInteractive -NoProfile -Command '$PSVersionTable'
    - name: Test
      run: |
        powershell -NoLogo -NonInteractive -NoProfile -Command './test/test.ps1'

  ##########
  # Docker #
  ##########
  test-powershell-6-0:
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/powershell:6.0.2-ubuntu-16.04
    steps:
    - uses: actions/checkout@v2
    - name: Powershell version
      run: |
        pwsh -NoLogo -NonInteractive -NoProfile -Command '$PSVersionTable'
    - name: Test
      run: |
        pwsh -NoLogo -NonInteractive -NoProfile -Command './test/test.ps1'

  test-powershell-6-1:
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/powershell:6.1.3-ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
    - name: Powershell version
      run: |
        pwsh -NoLogo -NonInteractive -NoProfile -Command '$PSVersionTable'
    - name: Test
      run: |
        pwsh -NoLogo -NonInteractive -NoProfile -Command './test/test.ps1'

  test-powershell-6-2:
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/powershell:6.2.4-ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
    - name: Powershell version
      run: |
        pwsh -NoLogo -NonInteractive -NoProfile -Command '$PSVersionTable'
    - name: Test
      run: |
        pwsh -NoLogo -NonInteractive -NoProfile -Command './test/test.ps1'

  test-powershell-7-0:
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/powershell:7.0.3-ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
    - name: Powershell version
      run: |
        pwsh -NoLogo -NonInteractive -NoProfile -Command '$PSVersionTable'
    - name: Test
      run: |
        pwsh -NoLogo -NonInteractive -NoProfile -Command './test/test.ps1'

  test-powershell-7-1:
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/powershell:7.1.3-ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
    - name: Powershell version
      run: |
        pwsh -NoLogo -NonInteractive -NoProfile -Command '$PSVersionTable'
    - name: Test
      run: |
        pwsh -NoLogo -NonInteractive -NoProfile -Command './test/test.ps1'

  update-draft-release:
    needs: [build, test-powershell-5-1-windows-2019, test-powershell-6-0, test-powershell-6-1, test-powershell-6-1, test-powershell-7-0, test-powershell-7-1, test-powershell-7-2]
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      # Drafts your next Release notes as Pull Requests are merged into "master"
      - uses: release-drafter/release-drafter@v5
        with:
          config-name: release-drafter.yml
          publish: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish-to-psgallery:
    needs: [build, test-powershell-5-1-windows-2019, test-powershell-6-0, test-powershell-6-1, test-powershell-6-1, test-powershell-7-0, test-powershell-7-1, test-powershell-7-2]
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - name: Powershell version
      run: |
        pwsh -NoLogo -NonInteractive -NoProfile -Command '$PSVersionTable'
    - name: Publish
      env:
        NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
      run: |
        set -e

        # Get 'ref-name' from 'refs/heads/ref-name'
        REF=$( echo "${GITHUB_REF}" | rev | cut -d '/' -f 1 | rev )

        # Strip of 'v' prefix from tag
        MODULE_VERSION=$( echo "${REF}" | sed 's/^v*//' )

        # Generate the new module manifest
        MODULE_NAME=$(basename $(pwd))
        MODULE_VERSION=${MODULE_VERSION} pwsh -Command "build/PSModulePublisher/src/module/Generate-ModuleManifest.ps1 -DefinitionFile build/definitions/modulemanifest/definition.ps1 -Path src/$MODULE_NAME/$MODULE_NAME.psd1"

        # Publish the module
        NUGET_API_KEY=${NUGET_API_KEY} MODULE_VERSION=${MODULE_VERSION} pwsh -Command "build/PSModulePublisher/src/Invoke-Publish.ps1 -ModuleManifestPath src/$MODULE_NAME/$MODULE_NAME.psd1 -Repository PSGallery"

  publish-draft-release:
    needs: [build, test-powershell-5-1-windows-2019, test-powershell-6-0, test-powershell-6-1, test-powershell-6-1, test-powershell-7-0, test-powershell-7-1, test-powershell-7-2, publish-to-psgallery]
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      # Drafts your next Release notes as Pull Requests are merged into "master"
      - uses: release-drafter/release-drafter@v5
        with:
          config-name: release-drafter.yml
          publish: true
          name: ${{ github.ref_name }} # E.g. 'master' or 'v1.2.3'
          tag: ${{ github.ref_name }} # E.g. 'master' or 'v1.2.3'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
